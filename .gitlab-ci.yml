stages:
    - distro_image
    - rustc_image

# Expects $DISTRO_NAME variable which should be the name of the distro image ex. ubuntu
# Expects $DISTRO_VER variable which should be the version distro image ex. 18.04
# Expects $OCI_YML variable which should be the path to the dockerfile
.distro_template: &distro_build
    variables:
        IMAGE: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/${DISTRO_NAME}:${DISTRO_VER}

    image: docker:latest
    services:
        - docker:dind

    script:
        - echo ${DISTRO_NAME}:${DISTRO_VER}
        - echo ${OCI_YML}
        - export IMAGE=${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/${DISTRO_NAME}:${DISTRO_VER}
        - echo ${IMAGE}
        - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
        - docker build --pull -f ${OCI_YML} -t ${IMAGE} .
        - docker push ${IMAGE}

fedora:latest:
    stage: distro_image
    before_script:
        - export DISTRO_NAME="fedora"
        - export DISTRO_VER="latest"
        - export OCI_YML="cross-distro-images/fedora_latest.yml"

    <<: *distro_build
