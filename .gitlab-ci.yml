image: docker:latest
services:
    - docker:dind

stages:
    - distro
    - rustc
    - gcc

# Expects $IMAGE which should be the name+tag of the registry image.
# Expects $OCI_YML variable which should be the path to the dockerfile
.base_template: &base_build
    script:
        - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
        - docker build --pull -f ${OCI_YML} -t ${IMAGE} .
        - docker push ${IMAGE}

# Expects $ARCH variable which should be the architexcture of the image ex. x86_64
# Expects $DISTRO_NAME variable which should be the name of the distro image ex. ubuntu
# Expects $DISTRO_VER variable which should be the version distro image ex. 18.04
# Expects $OCI_YML variable which should be the path to the dockerfile
.distro_template: &distro_build
    stage: distro
    before_script:
        - export IMAGE=${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/${ARCH}/${DISTRO_NAME}:${DISTRO_VER}
    <<: *base_build
    allow_failure: true

# Expects $COMPILER variable which should be the name of the compiler ex. rustc/gcc
# Expects $VERSION variable which should be the version of the compiler ex. 1.24/7
# Expects $OCI_YML variable which should be the path to the dockerfile
.compiler_template: &compiler_build
    before_script:
        - export IMAGE=${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/${COMPILER}:${VERSION}
    <<: *base_build
    allow_failure: true

fedora:latest:
    variables:
      ARCH: "amd64"
      DISTRO_NAME: "fedora"
      DISTRO_VER: "latest"
      OCI_YML: "amd64/fedora_latest.yml"

    <<: *distro_build

fedora:rawhide:
    variables:
      ARCH: "amd64"
      DISTRO_NAME: "fedora"
      DISTRO_VER: "rawhide"
      OCI_YML: "amd64/fedora_rawhide.yml"

    <<: *distro_build

debian:testing:
    variables:
      ARCH: "amd64"
      DISTRO_NAME: "debian"
      DISTRO_VER: "testing"
      OCI_YML: "amd64/debian_testing.yml"

    <<: *distro_build

opensuse:tumbleweed:
    variables:
      ARCH: "amd64"
      DISTRO_NAME: "opensuse"
      DISTRO_VER: "tumbleweed"
      OCI_YML: "amd64/opensuse_tumbleweed.yml"

    <<: *distro_build

# Not usefull while the deps are outdated
# amazon:2:
#     variables:
#       ARCH: "amd64"
#       DISTRO_NAME: "amazon"
#       DISTRO_VER: "2"
#       OCI_YML: "amd64/amazon_linux_2.yml"

#     <<: *distro_build

# Not usefull while the deps are outdated
# centos:7:
#     variables:
#       ARCH: "amd64"
#       DISTRO_NAME: "centos"
#       DISTRO_VER: "7"
#       OCI_YML: "amd64/centos_7.yml"

#     <<: *distro_build

debian_i386:testing:
    variables:
      ARCH: "i386"
      DISTRO_NAME: "debian"
      DISTRO_VER: "testing"
      OCI_YML: "i386/debian_testing.yml"

    <<: *distro_build

rustc:1.24:
    stage: rustc
    variables:
      COMPILER: "rustc"
      VERSION: "1.24"
      OCI_YML: "rustc/v1_24.yml"

    <<: *compiler_build

rustc:1.23:
    stage: rustc
    variables:
      COMPILER: "rustc"
      VERSION: "1.23"
      OCI_YML: "rustc/v1_23.yml"

    <<: *compiler_build

rustc:1.22:
    stage: rustc
    variables:
      COMPILER: "rustc"
      VERSION: "1.22"
      OCI_YML: "rustc/v1_22.yml"

    <<: *compiler_build

rustc:1.21:
    stage: rustc
    variables:
      COMPILER: "rustc"
      VERSION: "1.21"
      OCI_YML: "rustc/v1_21.yml"

    <<: *compiler_build
